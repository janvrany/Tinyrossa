Class {
	#name : #TRILEvaluator,
	#superclass : #Object,
	#classVars : [
		'EvaluatorTable'
	],
	#pools : [
		'TRILOpcodes'
	],
	#category : #'Tinyrossa-IL'
}

{ #category : #initialization }
TRILEvaluator class >> initialize [
	"Automatically generated by opcodesgen. DO NOT EDIT!"

	EvaluatorTable := IdentityDictionary withKeysAndValues:
	{







	aconst . #evaluate_aconst: .
	iconst . #evaluate_iconst: .
	lconst . #evaluate_lconst: .
	fconst . #evaluate_fconst: .
	dconst . #evaluate_dconst: .
	bconst . #evaluate_bconst: .
	sconst . #evaluate_sconst: .
	iload . #evaluate_iload: .
	fload . #evaluate_fload: .
	dload . #evaluate_dload: .
	aload . #evaluate_aload: .
	bload . #evaluate_bload: .
	sload . #evaluate_sload: .
	lload . #evaluate_lload: .
	irdbar . #evaluate_irdbar: .
	frdbar . #evaluate_frdbar: .
	drdbar . #evaluate_drdbar: .
	ardbar . #evaluate_ardbar: .
	brdbar . #evaluate_brdbar: .
	srdbar . #evaluate_srdbar: .
	lrdbar . #evaluate_lrdbar: .
	iloadi . #evaluate_iloadi: .
	floadi . #evaluate_floadi: .
	dloadi . #evaluate_dloadi: .
	aloadi . #evaluate_aloadi: .
	bloadi . #evaluate_bloadi: .
	sloadi . #evaluate_sloadi: .
	lloadi . #evaluate_lloadi: .
	irdbari . #evaluate_irdbari: .
	frdbari . #evaluate_frdbari: .
	drdbari . #evaluate_drdbari: .
	ardbari . #evaluate_ardbari: .
	brdbari . #evaluate_brdbari: .
	srdbari . #evaluate_srdbari: .
	lrdbari . #evaluate_lrdbari: .
	istore . #evaluate_istore: .
	lstore . #evaluate_lstore: .
	fstore . #evaluate_fstore: .
	dstore . #evaluate_dstore: .
	astore . #evaluate_astore: .
	bstore . #evaluate_bstore: .
	sstore . #evaluate_sstore: .
	iwrtbar . #evaluate_iwrtbar: .
	lwrtbar . #evaluate_lwrtbar: .
	fwrtbar . #evaluate_fwrtbar: .
	dwrtbar . #evaluate_dwrtbar: .
	awrtbar . #evaluate_awrtbar: .
	bwrtbar . #evaluate_bwrtbar: .
	swrtbar . #evaluate_swrtbar: .
	lstorei . #evaluate_lstorei: .
	fstorei . #evaluate_fstorei: .
	dstorei . #evaluate_dstorei: .
	astorei . #evaluate_astorei: .
	bstorei . #evaluate_bstorei: .
	sstorei . #evaluate_sstorei: .
	istorei . #evaluate_istorei: .
	lwrtbari . #evaluate_lwrtbari: .
	fwrtbari . #evaluate_fwrtbari: .
	dwrtbari . #evaluate_dwrtbari: .
	awrtbari . #evaluate_awrtbari: .
	bwrtbari . #evaluate_bwrtbari: .
	swrtbari . #evaluate_swrtbari: .
	iwrtbari . #evaluate_iwrtbari: .
	goto . #evaluate_goto: .
	ireturn . #evaluate_ireturn: .
	lreturn . #evaluate_lreturn: .
	freturn . #evaluate_freturn: .
	dreturn . #evaluate_dreturn: .
	areturn . #evaluate_areturn: .
	return . #evaluate_return: .
	asynccheck . #evaluate_asynccheck: .
	athrow . #evaluate_athrow: .
	icall . #evaluate_icall: .
	lcall . #evaluate_lcall: .
	fcall . #evaluate_fcall: .
	dcall . #evaluate_dcall: .
	acall . #evaluate_acall: .
	call . #evaluate_call: .
	iadd . #evaluate_iadd: .
	ladd . #evaluate_ladd: .
	fadd . #evaluate_fadd: .
	dadd . #evaluate_dadd: .
	badd . #evaluate_badd: .
	sadd . #evaluate_sadd: .
	isub . #evaluate_isub: .
	lsub . #evaluate_lsub: .
	fsub . #evaluate_fsub: .
	dsub . #evaluate_dsub: .
	bsub . #evaluate_bsub: .
	ssub . #evaluate_ssub: .
	asub . #evaluate_asub: .
	imul . #evaluate_imul: .
	lmul . #evaluate_lmul: .
	fmul . #evaluate_fmul: .
	dmul . #evaluate_dmul: .
	bmul . #evaluate_bmul: .
	smul . #evaluate_smul: .
	idiv . #evaluate_idiv: .
	ldiv . #evaluate_ldiv: .
	fdiv . #evaluate_fdiv: .
	ddiv . #evaluate_ddiv: .
	bdiv . #evaluate_bdiv: .
	sdiv . #evaluate_sdiv: .
	iudiv . #evaluate_iudiv: .
	ludiv . #evaluate_ludiv: .
	irem . #evaluate_irem: .
	lrem . #evaluate_lrem: .
	frem . #evaluate_frem: .
	drem . #evaluate_drem: .
	brem . #evaluate_brem: .
	srem . #evaluate_srem: .
	iurem . #evaluate_iurem: .
	ineg . #evaluate_ineg: .
	lneg . #evaluate_lneg: .
	fneg . #evaluate_fneg: .
	dneg . #evaluate_dneg: .
	bneg . #evaluate_bneg: .
	sneg . #evaluate_sneg: .
	iabs . #evaluate_iabs: .
	labs . #evaluate_labs: .
	fabs . #evaluate_fabs: .
	dabs . #evaluate_dabs: .
	ishl . #evaluate_ishl: .
	lshl . #evaluate_lshl: .
	bshl . #evaluate_bshl: .
	sshl . #evaluate_sshl: .
	ishr . #evaluate_ishr: .
	lshr . #evaluate_lshr: .
	bshr . #evaluate_bshr: .
	sshr . #evaluate_sshr: .
	iushr . #evaluate_iushr: .
	lushr . #evaluate_lushr: .
	bushr . #evaluate_bushr: .
	sushr . #evaluate_sushr: .
	irol . #evaluate_irol: .
	lrol . #evaluate_lrol: .
	iand . #evaluate_iand: .
	land . #evaluate_land: .
	band . #evaluate_band: .
	sand . #evaluate_sand: .
	ior . #evaluate_ior: .
	lor . #evaluate_lor: .
	bor . #evaluate_bor: .
	sor . #evaluate_sor: .
	ixor . #evaluate_ixor: .
	lxor . #evaluate_lxor: .
	bxor . #evaluate_bxor: .
	sxor . #evaluate_sxor: .
	i2l . #evaluate_i2l: .
	i2f . #evaluate_i2f: .
	i2d . #evaluate_i2d: .
	i2b . #evaluate_i2b: .
	i2s . #evaluate_i2s: .
	i2a . #evaluate_i2a: .
	iu2l . #evaluate_iu2l: .
	iu2f . #evaluate_iu2f: .
	iu2d . #evaluate_iu2d: .
	iu2a . #evaluate_iu2a: .
	l2i . #evaluate_l2i: .
	l2f . #evaluate_l2f: .
	l2d . #evaluate_l2d: .
	l2b . #evaluate_l2b: .
	l2s . #evaluate_l2s: .
	l2a . #evaluate_l2a: .
	lu2f . #evaluate_lu2f: .
	lu2d . #evaluate_lu2d: .
	lu2a . #evaluate_lu2a: .
	f2i . #evaluate_f2i: .
	f2l . #evaluate_f2l: .
	f2d . #evaluate_f2d: .
	f2b . #evaluate_f2b: .
	f2s . #evaluate_f2s: .
	d2i . #evaluate_d2i: .
	d2l . #evaluate_d2l: .
	d2f . #evaluate_d2f: .
	d2b . #evaluate_d2b: .
	d2s . #evaluate_d2s: .
	b2i . #evaluate_b2i: .
	b2l . #evaluate_b2l: .
	b2f . #evaluate_b2f: .
	b2d . #evaluate_b2d: .
	b2s . #evaluate_b2s: .
	b2a . #evaluate_b2a: .
	bu2i . #evaluate_bu2i: .
	bu2l . #evaluate_bu2l: .
	bu2f . #evaluate_bu2f: .
	bu2d . #evaluate_bu2d: .
	bu2s . #evaluate_bu2s: .
	bu2a . #evaluate_bu2a: .
	s2i . #evaluate_s2i: .
	s2l . #evaluate_s2l: .
	s2f . #evaluate_s2f: .
	s2d . #evaluate_s2d: .
	s2b . #evaluate_s2b: .
	s2a . #evaluate_s2a: .
	su2i . #evaluate_su2i: .
	su2l . #evaluate_su2l: .
	su2f . #evaluate_su2f: .
	su2d . #evaluate_su2d: .
	su2a . #evaluate_su2a: .
	a2i . #evaluate_a2i: .
	a2l . #evaluate_a2l: .
	a2b . #evaluate_a2b: .
	a2s . #evaluate_a2s: .
	icmpeq . #evaluate_icmpeq: .
	icmpne . #evaluate_icmpne: .
	icmplt . #evaluate_icmplt: .
	icmpge . #evaluate_icmpge: .
	icmpgt . #evaluate_icmpgt: .
	icmple . #evaluate_icmple: .
	iucmplt . #evaluate_iucmplt: .
	iucmpge . #evaluate_iucmpge: .
	iucmpgt . #evaluate_iucmpgt: .
	iucmple . #evaluate_iucmple: .
	lcmpeq . #evaluate_lcmpeq: .
	lcmpne . #evaluate_lcmpne: .
	lcmplt . #evaluate_lcmplt: .
	lcmpge . #evaluate_lcmpge: .
	lcmpgt . #evaluate_lcmpgt: .
	lcmple . #evaluate_lcmple: .
	lucmplt . #evaluate_lucmplt: .
	lucmpge . #evaluate_lucmpge: .
	lucmpgt . #evaluate_lucmpgt: .
	lucmple . #evaluate_lucmple: .
	fcmpeq . #evaluate_fcmpeq: .
	fcmpne . #evaluate_fcmpne: .
	fcmplt . #evaluate_fcmplt: .
	fcmpge . #evaluate_fcmpge: .
	fcmpgt . #evaluate_fcmpgt: .
	fcmple . #evaluate_fcmple: .
	fcmpequ . #evaluate_fcmpequ: .
	fcmpneu . #evaluate_fcmpneu: .
	fcmpltu . #evaluate_fcmpltu: .
	fcmpgeu . #evaluate_fcmpgeu: .
	fcmpgtu . #evaluate_fcmpgtu: .
	fcmpleu . #evaluate_fcmpleu: .
	dcmpeq . #evaluate_dcmpeq: .
	dcmpne . #evaluate_dcmpne: .
	dcmplt . #evaluate_dcmplt: .
	dcmpge . #evaluate_dcmpge: .
	dcmpgt . #evaluate_dcmpgt: .
	dcmple . #evaluate_dcmple: .
	dcmpequ . #evaluate_dcmpequ: .
	dcmpneu . #evaluate_dcmpneu: .
	dcmpltu . #evaluate_dcmpltu: .
	dcmpgeu . #evaluate_dcmpgeu: .
	dcmpgtu . #evaluate_dcmpgtu: .
	dcmpleu . #evaluate_dcmpleu: .
	acmpeq . #evaluate_acmpeq: .
	acmpne . #evaluate_acmpne: .
	acmplt . #evaluate_acmplt: .
	acmpge . #evaluate_acmpge: .
	acmpgt . #evaluate_acmpgt: .
	acmple . #evaluate_acmple: .
	bcmpeq . #evaluate_bcmpeq: .
	bcmpne . #evaluate_bcmpne: .
	bcmplt . #evaluate_bcmplt: .
	bcmpge . #evaluate_bcmpge: .
	bcmpgt . #evaluate_bcmpgt: .
	bcmple . #evaluate_bcmple: .
	bucmplt . #evaluate_bucmplt: .
	bucmpge . #evaluate_bucmpge: .
	bucmpgt . #evaluate_bucmpgt: .
	bucmple . #evaluate_bucmple: .
	scmpeq . #evaluate_scmpeq: .
	scmpne . #evaluate_scmpne: .
	scmplt . #evaluate_scmplt: .
	scmpge . #evaluate_scmpge: .
	scmpgt . #evaluate_scmpgt: .
	scmple . #evaluate_scmple: .
	sucmplt . #evaluate_sucmplt: .
	sucmpge . #evaluate_sucmpge: .
	sucmpgt . #evaluate_sucmpgt: .
	sucmple . #evaluate_sucmple: .
	lcmp . #evaluate_lcmp: .
	fcmpl . #evaluate_fcmpl: .
	fcmpg . #evaluate_fcmpg: .
	dcmpl . #evaluate_dcmpl: .
	dcmpg . #evaluate_dcmpg: .
	ificmpeq . #evaluate_ificmpeq: .
	ificmpne . #evaluate_ificmpne: .
	ificmplt . #evaluate_ificmplt: .
	ificmpge . #evaluate_ificmpge: .
	ificmpgt . #evaluate_ificmpgt: .
	ificmple . #evaluate_ificmple: .
	ifiucmplt . #evaluate_ifiucmplt: .
	ifiucmpge . #evaluate_ifiucmpge: .
	ifiucmpgt . #evaluate_ifiucmpgt: .
	ifiucmple . #evaluate_ifiucmple: .
	iflcmpeq . #evaluate_iflcmpeq: .
	iflcmpne . #evaluate_iflcmpne: .
	iflcmplt . #evaluate_iflcmplt: .
	iflcmpge . #evaluate_iflcmpge: .
	iflcmpgt . #evaluate_iflcmpgt: .
	iflcmple . #evaluate_iflcmple: .
	iflucmplt . #evaluate_iflucmplt: .
	iflucmpge . #evaluate_iflucmpge: .
	iflucmpgt . #evaluate_iflucmpgt: .
	iflucmple . #evaluate_iflucmple: .
	iffcmpeq . #evaluate_iffcmpeq: .
	iffcmpne . #evaluate_iffcmpne: .
	iffcmplt . #evaluate_iffcmplt: .
	iffcmpge . #evaluate_iffcmpge: .
	iffcmpgt . #evaluate_iffcmpgt: .
	iffcmple . #evaluate_iffcmple: .
	iffcmpequ . #evaluate_iffcmpequ: .
	iffcmpneu . #evaluate_iffcmpneu: .
	iffcmpltu . #evaluate_iffcmpltu: .
	iffcmpgeu . #evaluate_iffcmpgeu: .
	iffcmpgtu . #evaluate_iffcmpgtu: .
	iffcmpleu . #evaluate_iffcmpleu: .
	ifdcmpeq . #evaluate_ifdcmpeq: .
	ifdcmpne . #evaluate_ifdcmpne: .
	ifdcmplt . #evaluate_ifdcmplt: .
	ifdcmpge . #evaluate_ifdcmpge: .
	ifdcmpgt . #evaluate_ifdcmpgt: .
	ifdcmple . #evaluate_ifdcmple: .
	ifdcmpequ . #evaluate_ifdcmpequ: .
	ifdcmpneu . #evaluate_ifdcmpneu: .
	ifdcmpltu . #evaluate_ifdcmpltu: .
	ifdcmpgeu . #evaluate_ifdcmpgeu: .
	ifdcmpgtu . #evaluate_ifdcmpgtu: .
	ifdcmpleu . #evaluate_ifdcmpleu: .
	ifacmpeq . #evaluate_ifacmpeq: .
	ifacmpne . #evaluate_ifacmpne: .
	ifacmplt . #evaluate_ifacmplt: .
	ifacmpge . #evaluate_ifacmpge: .
	ifacmpgt . #evaluate_ifacmpgt: .
	ifacmple . #evaluate_ifacmple: .
	ifbcmpeq . #evaluate_ifbcmpeq: .
	ifbcmpne . #evaluate_ifbcmpne: .
	ifbcmplt . #evaluate_ifbcmplt: .
	ifbcmpge . #evaluate_ifbcmpge: .
	ifbcmpgt . #evaluate_ifbcmpgt: .
	ifbcmple . #evaluate_ifbcmple: .
	ifbucmplt . #evaluate_ifbucmplt: .
	ifbucmpge . #evaluate_ifbucmpge: .
	ifbucmpgt . #evaluate_ifbucmpgt: .
	ifbucmple . #evaluate_ifbucmple: .
	ifscmpeq . #evaluate_ifscmpeq: .
	ifscmpne . #evaluate_ifscmpne: .
	ifscmplt . #evaluate_ifscmplt: .
	ifscmpge . #evaluate_ifscmpge: .
	ifscmpgt . #evaluate_ifscmpgt: .
	ifscmple . #evaluate_ifscmple: .
	ifsucmplt . #evaluate_ifsucmplt: .
	ifsucmpge . #evaluate_ifsucmpge: .
	ifsucmpgt . #evaluate_ifsucmpgt: .
	ifsucmple . #evaluate_ifsucmple: .
	loadaddr . #evaluate_loadaddr: .
	zerochk . #evaluate_zerochk: .
	iregload . #evaluate_iregload: .
	aregload . #evaluate_aregload: .
	lregload . #evaluate_lregload: .
	fregload . #evaluate_fregload: .
	dregload . #evaluate_dregload: .
	sregload . #evaluate_sregload: .
	bregload . #evaluate_bregload: .
	iregstore . #evaluate_iregstore: .
	aregstore . #evaluate_aregstore: .
	lregstore . #evaluate_lregstore: .
	fregstore . #evaluate_fregstore: .
	dregstore . #evaluate_dregstore: .
	sregstore . #evaluate_sregstore: .
	bregstore . #evaluate_bregstore: .
	glregdeps . #evaluate_glregdeps: .
	iselect . #evaluate_iselect: .
	lselect . #evaluate_lselect: .
	bselect . #evaluate_bselect: .
	sselect . #evaluate_sselect: .
	aselect . #evaluate_aselect: .
	fselect . #evaluate_fselect: .
	dselect . #evaluate_dselect: .
	treetop . #evaluate_treetop: .
	methodenterhook . #evaluate_methodenterhook: .
	methodexithook . #evaluate_methodexithook: .
	passthrough . #evaluate_passthrough: .
	compressedrefs . #evaluate_compressedrefs: .
	bbstart . #evaluate_bbstart: .
	bbend . #evaluate_bbend: .
	f2iu . #evaluate_f2iu: .
	f2lu . #evaluate_f2lu: .
	f2bu . #evaluate_f2bu: .
	f2c . #evaluate_f2c: .
	d2iu . #evaluate_d2iu: .
	d2lu . #evaluate_d2lu: .
	d2bu . #evaluate_d2bu: .
	d2c . #evaluate_d2c: .
	monent . #evaluate_monent: .
	monexit . #evaluate_monexit: .
	monexitfence . #evaluate_monexitfence: .
	tstart . #evaluate_tstart: .
	tfinish . #evaluate_tfinish: .
	tabort . #evaluate_tabort: .
	instanceof . #evaluate_instanceof: .
	checkcast . #evaluate_checkcast: .
	checkcastandnullchk . #evaluate_checkcastandnullchk: .
	new . #evaluate_new: .
	newvalue . #evaluate_newvalue: .
	newarray . #evaluate_newarray: .
	anewarray . #evaluate_anewarray: .
	variablenew . #evaluate_variablenew: .
	variablenewarray . #evaluate_variablenewarray: .
	multianewarray . #evaluate_multianewarray: .
	arraylength . #evaluate_arraylength: .
	contigarraylength . #evaluate_contigarraylength: .
	discontigarraylength . #evaluate_discontigarraylength: .
	icalli . #evaluate_icalli: .
	lcalli . #evaluate_lcalli: .
	fcalli . #evaluate_fcalli: .
	dcalli . #evaluate_dcalli: .
	acalli . #evaluate_acalli: .
	calli . #evaluate_calli: .
	fence . #evaluate_fence: .
	luaddh . #evaluate_luaddh: .
	aiadd . #evaluate_aiadd: .
	aladd . #evaluate_aladd: .
	lusubh . #evaluate_lusubh: .
	imulh . #evaluate_imulh: .
	iumulh . #evaluate_iumulh: .
	lmulh . #evaluate_lmulh: .
	lumulh . #evaluate_lumulh: .
	ibits2f . #evaluate_ibits2f: .
	fbits2i . #evaluate_fbits2i: .
	lbits2d . #evaluate_lbits2d: .
	dbits2l . #evaluate_dbits2l: .
	lookup . #evaluate_lookup: .
	case . #evaluate_case: .
	table . #evaluate_table: .
	exceptionrangefence . #evaluate_exceptionrangefence: .
	nullchk . #evaluate_nullchk: .
	resolvechk . #evaluate_resolvechk: .
	resolveandnullchk . #evaluate_resolveandnullchk: .
	divchk . #evaluate_divchk: .
	overflowchk . #evaluate_overflowchk: .
	unsignedoverflowchk . #evaluate_unsignedoverflowchk: .
	bndchk . #evaluate_bndchk: .
	arraycopybndchk . #evaluate_arraycopybndchk: .
	bndchkwithspinechk . #evaluate_bndchkwithspinechk: .
	spinechk . #evaluate_spinechk: .
	arraystorechk . #evaluate_arraystorechk: .
	arraychk . #evaluate_arraychk: .
	arraycopy . #evaluate_arraycopy: .
	arrayset . #evaluate_arrayset: .
	arraytranslate . #evaluate_arraytranslate: .
	arraytranslateandtest . #evaluate_arraytranslateandtest: .
	long2string . #evaluate_long2string: .
	bitopmem . #evaluate_bitopmem: .
	arraycmp . #evaluate_arraycmp: .
	allocationfence . #evaluate_allocationfence: .
	loadfence . #evaluate_loadfence: .
	storefence . #evaluate_storefence: .
	fullfence . #evaluate_fullfence: .
	computecc . #evaluate_computecc: .
	butest . #evaluate_butest: .
	sutest . #evaluate_sutest: .
	bucmp . #evaluate_bucmp: .
	bcmp . #evaluate_bcmp: .
	sucmp . #evaluate_sucmp: .
	scmp . #evaluate_scmp: .
	iucmp . #evaluate_iucmp: .
	icmp . #evaluate_icmp: .
	lucmp . #evaluate_lucmp: .
	ificmpo . #evaluate_ificmpo: .
	ificmpno . #evaluate_ificmpno: .
	iflcmpo . #evaluate_iflcmpo: .
	iflcmpno . #evaluate_iflcmpno: .
	ificmno . #evaluate_ificmno: .
	ificmnno . #evaluate_ificmnno: .
	iflcmno . #evaluate_iflcmno: .
	iflcmnno . #evaluate_iflcmnno: .
	iuaddc . #evaluate_iuaddc: .
	luaddc . #evaluate_luaddc: .
	iusubb . #evaluate_iusubb: .
	lusubb . #evaluate_lusubb: .
	icmpset . #evaluate_icmpset: .
	lcmpset . #evaluate_lcmpset: .
	bztestnset . #evaluate_bztestnset: .
	ibatomicor . #evaluate_ibatomicor: .
	isatomicor . #evaluate_isatomicor: .
	iiatomicor . #evaluate_iiatomicor: .
	ilatomicor . #evaluate_ilatomicor: .
	branch . #evaluate_branch: .
	igoto . #evaluate_igoto: .
	fsqrt . #evaluate_fsqrt: .
	dsqrt . #evaluate_dsqrt: .
	dfloor . #evaluate_dfloor: .
	ffloor . #evaluate_ffloor: .
	dceil . #evaluate_dceil: .
	fceil . #evaluate_fceil: .
	imax . #evaluate_imax: .
	iumax . #evaluate_iumax: .
	lmax . #evaluate_lmax: .
	lumax . #evaluate_lumax: .
	fmax . #evaluate_fmax: .
	dmax . #evaluate_dmax: .
	imin . #evaluate_imin: .
	iumin . #evaluate_iumin: .
	lmin . #evaluate_lmin: .
	lumin . #evaluate_lumin: .
	fmin . #evaluate_fmin: .
	dmin . #evaluate_dmin: .
	ihbit . #evaluate_ihbit: .
	ilbit . #evaluate_ilbit: .
	inolz . #evaluate_inolz: .
	inotz . #evaluate_inotz: .
	ipopcnt . #evaluate_ipopcnt: .
	lhbit . #evaluate_lhbit: .
	llbit . #evaluate_llbit: .
	lnolz . #evaluate_lnolz: .
	lnotz . #evaluate_lnotz: .
	lpopcnt . #evaluate_lpopcnt: .
	sbyteswap . #evaluate_sbyteswap: .
	ibyteswap . #evaluate_ibyteswap: .
	lbyteswap . #evaluate_lbyteswap: .
	bbitpermute . #evaluate_bbitpermute: .
	sbitpermute . #evaluate_sbitpermute: .
	ibitpermute . #evaluate_ibitpermute: .
	lbitpermute . #evaluate_lbitpermute: .
	prefetch . #evaluate_prefetch: .

	}.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate: node [
	| evaluator |

	evaluator := EvaluatorTable at: node opcode.
	^ self perform: evaluator with: node.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_a2b: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_a2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_a2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_a2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acall: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acalli: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_acmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aiadd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aladd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_allocationfence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aloadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_anewarray: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ardbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ardbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_areturn: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraychk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraycmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraycopy: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraycopybndchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraylength: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arrayset: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraystorechk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraytranslate: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_arraytranslateandtest: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_aselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_astore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_astorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_asub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_asynccheck: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_athrow: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_awrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_awrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_b2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_b2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_b2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_b2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_b2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_b2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_badd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_band: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bbend: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bbitpermute: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bbstart: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bdiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bitopmem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bloadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bmul: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bndchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bndchkwithspinechk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bneg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_branch: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_brdbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_brdbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_brem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bshl: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bshr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bstorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bsub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bu2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bu2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bu2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bu2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bu2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bu2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bucmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bushr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_butest: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bwrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bwrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bxor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_bztestnset: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_call: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_calli: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_case: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_checkcast: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_checkcastandnullchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_compressedrefs: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_computecc: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_contigarraylength: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2b: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2bu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2c: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2iu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2lu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_d2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dabs: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dadd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dbits2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcall: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcalli: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dceil: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpequ: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpgeu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpgtu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpl: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpleu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpltu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dcmpneu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ddiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dfloor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_discontigarraylength: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_divchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dloadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dmax: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dmin: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dmul: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dneg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_drdbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_drdbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_drem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dreturn: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dsqrt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dstorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dsub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dwrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_dwrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_exceptionrangefence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2b: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2bu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2c: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2iu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2lu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_f2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fabs: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fadd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fbits2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcall: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcalli: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fceil: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpequ: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpgeu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpgtu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpl: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpleu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpltu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fcmpneu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fdiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ffloor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_floadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fmax: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fmin: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fmul: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fneg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_frdbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_frdbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_frem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_freturn: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fsqrt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fstorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fsub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fullfence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fwrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_fwrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_glregdeps: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_goto: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_i2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_i2b: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_i2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_i2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_i2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_i2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iabs: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iadd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iand: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ibatomicor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ibitpermute: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ibits2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ibyteswap: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icall: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icalli: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_icmpset: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_idiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifacmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifacmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifacmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifacmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifacmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifacmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifbucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpequ: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpgeu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpgtu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpleu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpltu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifdcmpneu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpequ: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpgeu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpgtu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpleu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpltu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iffcmpneu: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmnno: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmno: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmpno: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ificmpo: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifiucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifiucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifiucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifiucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmnno: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmno: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmpno: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflcmpo: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iflucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifscmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifscmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifscmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifscmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifscmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifscmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifsucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifsucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifsucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ifsucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_igoto: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ihbit: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iiatomicor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ilatomicor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ilbit: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iloadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_imax: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_imin: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_imul: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_imulh: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ineg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_inolz: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_inotz: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_instanceof: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ior: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ipopcnt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_irdbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_irdbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_irem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ireturn: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_irol: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_isatomicor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ishl: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ishr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_istore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_istorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_isub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iu2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iu2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iu2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iu2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iuaddc: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iucmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iudiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iumax: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iumin: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iumulh: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iurem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iushr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iusubb: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iwrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_iwrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ixor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_l2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_l2b: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_l2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_l2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_l2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_l2s: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_labs: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ladd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_land: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lbitpermute: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lbits2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lbyteswap: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcall: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcalli: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lcmpset: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ldiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lhbit: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_llbit: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lloadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lmax: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lmin: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lmul: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lmulh: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lneg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lnolz: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lnotz: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_loadaddr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_loadfence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_long2string: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lookup: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lpopcnt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lrdbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lrdbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lrem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lreturn: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lrol: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lshl: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lshr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lstorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lsub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lu2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lu2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lu2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_luaddc: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_luaddh: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lucmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ludiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lumax: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lumin: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lumulh: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lushr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lusubb: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lusubh: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lwrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lwrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_lxor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_methodenterhook: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_methodexithook: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_monent: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_monexit: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_monexitfence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_multianewarray: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_new: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_newarray: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_newvalue: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_nullchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_overflowchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_passthrough: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_prefetch: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_resolveandnullchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_resolvechk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_return: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_s2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_s2b: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_s2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_s2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_s2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_s2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sadd: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sand: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sbitpermute: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sbyteswap: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmpeq: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_scmpne: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sconst: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sdiv: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sloadi: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_smul: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sneg: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_spinechk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_srdbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_srdbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sregload: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sregstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_srem: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sselect: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sshl: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sshr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sstore: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sstorei: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_ssub: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_storefence: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_su2a: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_su2d: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_su2f: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_su2i: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_su2l: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sucmp: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sucmpge: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sucmpgt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sucmple: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sucmplt: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sushr: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sutest: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_swrtbar: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_swrtbari: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_sxor: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_table: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_tabort: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_tfinish: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_treetop: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_tstart: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_unsignedoverflowchk: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_variablenew: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_variablenewarray: node [
	self subclassResponsibility.
]

{ #category : #evaluation }
TRILEvaluator >> evaluate_zerochk: node [
	self subclassResponsibility.
]
